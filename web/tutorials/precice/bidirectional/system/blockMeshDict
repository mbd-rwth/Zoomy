/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "$FOAM_CASE/Parameters"
convertToMeters 1.0;

Ny_air #calc "ceil( ($h - $waterHeight) / $dy )";
dy_air #calc "($h - $waterHeight) / $Ny_air"; //true dy
Ny_mid #calc "round( ($waterHeight - $skewCellHeight) / $dy_air )";
skewCellHeight_final #calc "$waterHeight - ($Ny_mid * $dy_air)";

Ny_top #calc "$Ny_air + $Ny_mid";
Ny_bottom  #calc "ceil($skewCellHeight_final / $dy)";
Nx_channel  #calc "ceil($l1 / ($dx_to_dy * $dy))";
Nx_channel2  #calc "ceil(($l-$l1) / ($dx_to_dy * $dy))"; Nx_diffusor  #calc "ceil(0.5 * $waterHeight / (0.075 * $dx_to_dy * $dy))"; // 0.5 is an estimate

vertices
(
    (-0.0882 -0.1329 0)
    (0.056 -0.097 0)
    ($l1 0 0)
    ($l1 $skewCellHeight_final 0)
    (0 $skewCellHeight_final 0)
    (-0.1032 -0.1069 0)

    (-0.0882 -0.1329 1)
    (0.056 -0.097 1)
    ($l1 0 1)
    ($l1 $skewCellHeight_final 1)
    (0 $skewCellHeight_final 1)
    (-0.1032 -0.1069 1)

    ($l1 $h 0)
    (0 $h 0)
    ($l1 $h 1)
    (0 $h 1)

    ($l 0 0)
    ($l 0 1)
    ($l $skewCellHeight_final 0)
    ($l $skewCellHeight_final 1)
    ($l $h 0)
    ($l $h 1)
);

blocks
(
    hex (0 1 4 5 6 7 10 11) ($Nx_diffusor $Ny_bottom 1) simpleGrading (1 1 1)
    hex (1 2 3 4 7 8 9 10) ($Nx_channel $Ny_bottom 1) simpleGrading (1 1 1)
    hex (4 3 12 13 10 9 14 15) ($Nx_channel $Ny_top 1) simpleGrading (1 1 1)
    hex (2 16 18 3 8 17 19 9) ($Nx_channel2 $Ny_bottom 1) simpleGrading (1 1 1)
    hex (3 18 20 12 9 19 21 14) ($Nx_channel2 $Ny_top 1) simpleGrading (1 1 1)
);

edges
(
 polyLine 0 1 ((-0.0622 -0.1179 0))
 polyLine 1 2 ((0.3 0 0))
 polyLine 6 7 ((-0.0622 -0.1179 1))
 polyLine 7 8 ((0.3 0 1))

 polyLine 4 5 ((0 0 0) (-0.0772 -0.0919 0))
 polyLine 10 11 ((0 0 1) (-0.0772 -0.0919 1))
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 5 11 6)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (16 18 19 17)
            (18 20 21 19)
        );
    }
    walls
    {
        type wall;
        faces
        (
            (0 1 7 6)
            (1 2 8 7)
            (4 5 11 10)
            (4 13 15 10)
	    //outlet
            //(2 3 9 8)
            //(3 12 14 9)
            (2 16 17 8)
            // outlet
        );
    }
    atmosphere
    {
        type patch;
        faces
        (
            (12 13 15 14)
            (12 20 21 14)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 4 5)
            (1 2 3 4)
            (6 7 10 11)
            (7 8 9 10)
            (4 3 12 13)
            (10 9 14 15)
            (2 16 18 3)
            (3 18 20 12)
            (8 17 19 9)
            (9 19 21 14)
        );
    }
);

// ************************************************************************* //
